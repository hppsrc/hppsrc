Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName PresentationFramework

$form = New-Object System.Windows.Forms.Form
$form.Text = "PowerShell Timer"
$form.Size = New-Object System.Drawing.Size(500, 400)
$form.StartPosition = "CenterScreen"
$form.FormBorderStyle = "Fixed3D"
$form.MaximizeBox = $false

$global:timer = New-Object System.Windows.Forms.Timer
$global:remainingTime = 0
$global:originalTime = 0
$global:soundPath = "$env:SystemRoot\Media\"

$classicSounds = @(
    "chimes.wav", "tada.wav", "notify.wav",
    "Alarm01.wav", "Ring01.wav", "Alarm10.wav"
)

$labelTime = New-Object System.Windows.Forms.Label
$labelTime.Location = New-Object System.Drawing.Point(100, 20)
$labelTime.Size = New-Object System.Drawing.Size(300, 40)
$labelTime.Font = New-Object System.Drawing.Font("Arial", 24, [System.Drawing.FontStyle]::Bold)
$labelTime.ForeColor = [System.Drawing.Color]::DarkBlue
$labelTime.Text = "00:00:00"
$labelTime.TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center

$numMinutes = New-Object System.Windows.Forms.NumericUpDown
$numMinutes.Location = New-Object System.Drawing.Point(50, 80)
$numMinutes.Size = New-Object System.Drawing.Size(100, 30)
$numMinutes.Minimum = 0
$numMinutes.Maximum = 599
$numMinutes.Font = New-Object System.Drawing.Font("Arial", 12)

$numSeconds = New-Object System.Windows.Forms.NumericUpDown
$numSeconds.Location = New-Object System.Drawing.Point(250, 80)
$numSeconds.Size = New-Object System.Drawing.Size(100, 30)
$numSeconds.Minimum = 0
$numSeconds.Maximum = 59
$numSeconds.Font = New-Object System.Drawing.Font("Arial", 12)

$cmbSounds = New-Object System.Windows.Forms.ComboBox
$cmbSounds.Location = New-Object System.Drawing.Point(50, 220)
$cmbSounds.Size = New-Object System.Drawing.Size(200, 30)
$cmbSounds.DropDownStyle = [System.Windows.Forms.ComboBoxStyle]::DropDownList
$cmbSounds.Font = New-Object System.Drawing.Font("Arial", 10)

$chkSound = New-Object System.Windows.Forms.CheckBox
$chkSound.Location = New-Object System.Drawing.Point(50, 190)
$chkSound.Size = New-Object System.Drawing.Size(150, 30)
$chkSound.Text = "Habilitar Sonido"
$chkSound.Checked = $true
$chkSound.Font = New-Object System.Drawing.Font("Arial", 10)

$btnStart = New-Object System.Windows.Forms.Button
$btnStart.Location = New-Object System.Drawing.Point(50, 130)
$btnStart.Size = New-Object System.Drawing.Size(75, 30)
$btnStart.Text = "Iniciar"
$btnStart.Font = New-Object System.Drawing.Font("Arial", 10)
$btnStart.BackColor = [System.Drawing.Color]::LightGreen

$btnPause = New-Object System.Windows.Forms.Button
$btnPause.Location = New-Object System.Drawing.Point(130, 130)
$btnPause.Size = New-Object System.Drawing.Size(75, 30)
$btnPause.Text = "Pausa"
$btnPause.Enabled = $false
$btnPause.Font = New-Object System.Drawing.Font("Arial", 10)
$btnPause.BackColor = [System.Drawing.Color]::LightGoldenrodYellow

$btnResume = New-Object System.Windows.Forms.Button
$btnResume.Location = New-Object System.Drawing.Point(210, 130)
$btnResume.Size = New-Object System.Drawing.Size(75, 30)
$btnResume.Text = "Continuar"
$btnResume.Enabled = $false
$btnResume.Font = New-Object System.Drawing.Font("Arial", 10)
$btnResume.BackColor = [System.Drawing.Color]::LightSkyBlue

$btnReset = New-Object System.Windows.Forms.Button
$btnReset.Location = New-Object System.Drawing.Point(290, 130)
$btnReset.Size = New-Object System.Drawing.Size(75, 30)
$btnReset.Text = "Resetear"
$btnReset.Enabled = $false
$btnReset.Font = New-Object System.Drawing.Font("Arial", 10)
$btnReset.BackColor = [System.Drawing.Color]::LightCoral

$btnTestSound = New-Object System.Windows.Forms.Button
$btnTestSound.Location = New-Object System.Drawing.Point(260, 220)
$btnTestSound.Size = New-Object System.Drawing.Size(100, 30)
$btnTestSound.Text = "Probar Sonido"
$btnTestSound.Font = New-Object System.Drawing.Font("Arial", 10)

$btnExport = New-Object System.Windows.Forms.Button
$btnExport.Location = New-Object System.Drawing.Point(50, 260)
$btnExport.Size = New-Object System.Drawing.Size(100, 30)
$btnExport.Text = "Exportar"
$btnExport.Font = New-Object System.Drawing.Font("Arial", 10)

$btnImport = New-Object System.Windows.Forms.Button
$btnImport.Location = New-Object System.Drawing.Point(160, 260)
$btnImport.Size = New-Object System.Drawing.Size(100, 30)
$btnImport.Text = "Importar"
$btnImport.Font = New-Object System.Drawing.Font("Arial", 10)

$btnExit = New-Object System.Windows.Forms.Button
$btnExit.Location = New-Object System.Drawing.Point(270, 260)
$btnExit.Size = New-Object System.Drawing.Size(100, 30)
$btnExit.Text = "Salir"
$btnExit.Font = New-Object System.Drawing.Font("Arial", 10)
$btnExit.BackColor = [System.Drawing.Color]::LightGray

$timer.Interval = 1000
$timer.Add_Tick({
    $global:remainingTime--

    if ($global:remainingTime -le 0) {
        $timer.Stop()
        $btnStart.Enabled = $true
        $btnPause.Enabled = $false
        $btnResume.Enabled = $false
        $btnReset.Enabled = $true
        $numMinutes.Enabled = $true
        $numSeconds.Enabled = $true
        $labelTime.Text = "00:00:00"

        if ($chkSound.Checked -and $cmbSounds.SelectedItem -ne $null) {
            $soundFile = $global:soundPath + $cmbSounds.SelectedItem
            if (Test-Path $soundFile) {
                $player = New-Object System.Media.SoundPlayer $soundFile
                $player.Play()
            }
        }

        [System.Windows.Forms.MessageBox]::Show("�Tiempo terminado!", "Alerta",
            [System.Windows.Forms.MessageBoxButtons]::OK,
            [System.Windows.Forms.MessageBoxIcon]::Information)
        return
    }

    $hours = [math]::Floor($global:remainingTime / 3600)
    $minutes = [math]::Floor(($global:remainingTime % 3600) / 60)
    $seconds = $global:remainingTime % 60
    $labelTime.Text = "{0:00}:{1:00}:{2:00}" -f $hours, $minutes, $seconds
})

$btnStart.Add_Click({
    $global:originalTime = ($numMinutes.Value * 60) + $numSeconds.Value
    $global:remainingTime = $global:originalTime

    if ($global:remainingTime -gt 0) {
        $timer.Start()
        $btnStart.Enabled = $false
        $btnPause.Enabled = $true
        $btnReset.Enabled = $true
        $numMinutes.Enabled = $false
        $numSeconds.Enabled = $false

        $hours = [math]::Floor($global:remainingTime / 3600)
        $minutes = [math]::Floor(($global:remainingTime % 3600) / 60)
        $seconds = $global:remainingTime % 60
        $labelTime.Text = "{0:00}:{1:00}:{2:00}" -f $hours, $minutes, $seconds
    }
})

$btnPause.Add_Click({
    $timer.Stop()
    $btnPause.Enabled = $false
    $btnResume.Enabled = $true
})

$btnResume.Add_Click({
    $timer.Start()
    $btnResume.Enabled = $false
    $btnPause.Enabled = $true
})

$btnReset.Add_Click({
    $timer.Stop()
    $global:remainingTime = $global:originalTime
    $hours = [math]::Floor($global:remainingTime / 3600)
    $minutes = [math]::Floor(($global:remainingTime % 3600) / 60)
    $seconds = $global:remainingTime % 60
    $labelTime.Text = "{0:00}:{1:00}:{2:00}" -f $hours, $minutes, $seconds
    $btnStart.Enabled = $true
    $btnPause.Enabled = $false
    $btnResume.Enabled = $false
    $btnReset.Enabled = $false
    $numMinutes.Enabled = $true
    $numSeconds.Enabled = $true
})

$btnTestSound.Add_Click({
    if ($chkSound.Checked -and $cmbSounds.SelectedItem -ne $null) {
        $soundFile = $global:soundPath + $cmbSounds.SelectedItem
        if (Test-Path $soundFile) {
            $player = New-Object System.Media.SoundPlayer $soundFile
            $player.Play()
        }
    }
})

$btnExport.Add_Click({
    $saveFileDialog = New-Object System.Windows.Forms.SaveFileDialog
    $saveFileDialog.Filter = "Timer Config (*.pst)|*.pst"
    $saveFileDialog.Title = "Exportar Configuraci�n"
    if ($saveFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        $config = @{
            Version = "1.0"
            Minutes = $numMinutes.Value
            Seconds = $numSeconds.Value
            SoundEnabled = $chkSound.Checked
            SelectedSound = $cmbSounds.SelectedItem
            OriginalTime = $global:originalTime
        }
        $config | ConvertTo-Json | Out-File $saveFileDialog.FileName
    }
})

$btnImport.Add_Click({
    $openFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $openFileDialog.Filter = "Timer Config (*.pst)|*.pst"
    $openFileDialog.Title = "Importar Configuraci�n"
    if ($openFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        try {
            $config = Get-Content $openFileDialog.FileName | ConvertFrom-Json
            $numMinutes.Value = [int]$config.Minutes
            $numSeconds.Value = [int]$config.Seconds
            $chkSound.Checked = [bool]$config.SoundEnabled
            $cmbSounds.SelectedItem = $config.SelectedSound
            $global:originalTime = [int]$config.OriginalTime
        }
        catch {
            [System.Windows.Forms.MessageBox]::Show(
                "Error al importar configuraci�n",
                "Error",
                [System.Windows.Forms.MessageBoxButtons]::OK,
                [System.Windows.Forms.MessageBoxIcon]::Error
            )
        }
    }
})

$btnExit.Add_Click({
    $form.Close()
})

foreach ($sound in $classicSounds) {
    if (Test-Path ($global:soundPath + $sound)) {
        $cmbSounds.Items.Add($sound) | Out-Null
    }
}
if ($cmbSounds.Items.Count -eq 0) { $cmbSounds.Items.Add("default.wav") | Out-Null }
$cmbSounds.SelectedIndex = 0

$form.Controls.AddRange(@(
    $labelTime, $numMinutes, $numSeconds, $chkSound, $cmbSounds,
    $btnStart, $btnPause, $btnResume, $btnReset,
    $btnTestSound, $btnExport, $btnImport, $btnExit
))

$labels = @(
    @{Text="Minutos"; Location="50,60"},
    @{Text="Segundos"; Location="250,60"},
    @{Text="Configuraci�n de Sonido:"; Location="50,200"}
)

foreach ($lbl in $labels) {
    $label = New-Object System.Windows.Forms.Label
    $label.Location = New-Object System.Drawing.Point($lbl.Location)
    $label.Text = $lbl.Text
    $label.Font = New-Object System.Drawing.Font("Arial", 10)
    $form.Controls.Add($label)
}

[void]$form.ShowDialog()